import{_ as e,c as t,o,ab as r}from"./chunks/framework.Dgh8ejg4.js";const u=JSON.parse('{"title":"Function: floorMod","description":"","frontmatter":{},"headers":[],"relativePath":"api/wind-core/functions/floorMod.md","filePath":"api/wind-core/functions/floorMod.md","lastUpdated":null}'),a={name:"api/wind-core/functions/floorMod.md"},d=r('<h1 id="function-floormod" tabindex="-1">Function: floorMod <a class="header-anchor" href="#function-floormod">¶</a></h1><p>▸ <strong>floorMod</strong>(<code>a</code>, <code>n</code>): <code>number</code></p><p>Get floored division</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters">¶</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>n</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns">¶</a></h4><p><code>number</code></p><p>returns remainder of floored division, i.e., floor(a / n). Useful for consistent modulo of negative numbers. See <a href="http://en.wikipedia.org/wiki/Modulo_operation" target="_blank" rel="noreferrer">http://en.wikipedia.org/wiki/Modulo_operation</a>.</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in">¶</a></h4><p><a href="https://github.com/sakitam-fdd/wind-layer/blob/master/packages/core/src/utils.ts#L177" target="_blank" rel="noreferrer">utils.ts:177</a></p>',10),n=[d];function i(s,l,c,f,h,p){return o(),t("div",null,n)}const m=e(a,[["render",i]]);export{u as __pageData,m as default};
