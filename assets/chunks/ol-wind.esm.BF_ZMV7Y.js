import{d as j,q as y,i as E,P,Q as A,a2 as f,f as v,t as W,S as D}from"./proj.BNE8J585.js";import{C as L}from"./Layer.Bev_0Xed.js";import{a as u,d as b,m as G,t as M,b as C}from"./transform.CU9krZJA.js";import{a as m,d as k,i as U,f as _,W as z}from"./wind-core.esm.BkKQCIS-.js";import{F as rt}from"./wind-core.esm.BkKQCIS-.js";import{L as H}from"./Event.BTHd1TaF.js";import"./Projection.Bg0YEavu.js";import"./Object.DdgBWT7D.js";import"./ImageState.BQAwWc_S.js";import"./dom.i4NIYYs1.js";import"./has.DEIyT5tI.js";const O={ANIMATING:0,INTERACTING:1};class q extends L{constructor(t){super(t),this.container=null,this.renderedResolution=NaN,this.tempTransform=u(),this.pixelTransform=u(),this.inversePixelTransform=u()}useContainer(t,e,i){super.useContainer(null,e,i)}prepareFrame(t){var r,o;const e=t.layerStatesArray[t.layerIndex],i=t.viewState,n=t.viewHints;let s=t.extent;return e.extent!==void 0&&(s=j(s,y(e.extent,i.projection))),!n[O.ANIMATING]&&!t.animate&&!n[O.INTERACTING]&&!E(s)?((o=(r=this.wind)==null?void 0:r.isStop)!=null&&o.call(r)&&this.wind.start(),!0):this.getLayer().get("forceRender")}renderFrame(t,e){const i=t.layerStatesArray[t.layerIndex],n=t.pixelRatio,s=t.viewState,r=t.size,o=Math.round(r[0]*n),c=Math.round(r[1]*n);b(this.pixelTransform,1/n,1/n),G(this.inversePixelTransform,this.pixelTransform);const p=M(this.pixelTransform);this.useContainer(e,p,i.opacity);const a=this.context,d=a.canvas;d.width!==o||d.height!==c?(d.width=o,d.height=c):this.containerReused||(a.globalCompositeOperation="source-over"),this.preRender(a,t);let h=!1,w=!0;if(i.extent){const l=y(i.extent,s.projection);w=P(l,t.extent),h=w&&!A(l,t.extent),h&&this.clipUnrotated(a,t,l)}const T=s.center,I=s.resolution,N=s.rotation,x=this.getLayer(),F=x.getWindOptions(),S=x.getData(),g=this.getRenderTransform(T,I,N,n,o,c,0);return this.execute(this.context,t,g,g,F,S),this.postRender(a,t),h&&a.restore(),p!==d.style.transform&&(d.style.transform=p),this.container}setOptions(t){this.wind&&this.wind.setOptions(t)}setData(t){this.wind&&this.wind.updateData(t)}execute(t,e,i,n,s,r){this.wind||(this.wind=new z(t,s,r),this.wind.project=this.getPixelFromCoordinateInternal.bind(this),this.wind.unproject=this.getCoordinateFromPixel.bind(this),this.wind.intersectsCoordinate=this.intersectsCoordinate.bind(this),this.wind.postrender=()=>{},this.wind.prerender())}getPixelFromCoordinateInternal(t){const e=this.frameState,i=e.viewState,n=e.pixelRatio,s=f(t,"EPSG:4326",i.projection),r=v(s,i.projection);if(e){const o=C(e.coordinateToPixelTransform,r.slice(0,2));return[o[0]*n,o[1]*n]}else return null}getCoordinateFromPixel(t){const e=this.frameState,i=e.viewState;if(e){const n=C(e.pixelToCoordinateTransform,t.slice(0,2)),s=W(n,i.projection),r=f(s,i.projection,"EPSG:4326");return[r[0],r[1]]}else return null}intersectsCoordinate(t){const e=this.frameState,i=e.viewState,n=f(t,"EPSG:4326",i.projection),s=v(n,i.projection);return D(e.extent,s.slice(0,2))}}const Q={forceRender:!0,windOptions:{}};class it extends H{constructor(t,e){const i=m({},Q,e);super(i),this.options=i,this.className_=e.className!==void 0?e.className:"wind-layer",this.pickWindOptions(),this._map=i.map||null,t&&this.setData(t,e.fieldOptions)}appendTo(t){t.addLayer(this)}unrender(){super.unrender();const t=this.getRenderer();t&&t.wind.stop()}createRenderer(){return new q(this)}pickWindOptions(){Object.keys(k).forEach(t=>{t in this.options&&(this.options.windOptions===void 0&&(this.options.windOptions={}),this.options.windOptions[t]=this.options[t])})}getData(){return this.field}setData(t,e={}){t&&t.checkFields&&t.checkFields()?this.field=t:U(t)?this.field=_(t,e):console.error("Illegal data");const i=this.getRenderer();return i&&this.field&&i.setData(this.field),this}setWindOptions(t){const e=this.options.windOptions||{};this.options=m(this.options,{windOptions:m(e,t||{})});const i=this.getRenderer();if(i){const n=this.options.windOptions;i.setOptions(n)}}getWindOptions(){return this.options.windOptions||{}}render(t,e){const i=this.getRenderer();return i.prepareFrame(t)?(this.rendered=!0,i.renderFrame(t,e)):null}setMap(t){var e;if(super.setMap(t),!t)this.unrender();else{const i=this.getRenderer();i&&((e=i.wind)==null||e.start())}}}export{rt as Field,it as WindLayer};
