import{d as v,q as l,i as R,P as C,Q as y,a2 as p,f as u,t as O,S as T}from"./proj.BNE8J585.js";import{C as I}from"./Layer.Bev_0Xed.js";import{a as f,c as E,m as A,t as F,b as w}from"./transform.CU9krZJA.js";import{a as h,d as j,i as N,f as P,W as S}from"./wind-core.esm.CHEVv6qw.js";import{F as K}from"./wind-core.esm.CHEVv6qw.js";import{L as W}from"./Event.BTHd1TaF.js";import"./Projection.Bg0YEavu.js";import"./Object.DdgBWT7D.js";import"./ImageState.BQAwWc_S.js";import"./dom.i4NIYYs1.js";import"./has.DEIyT5tI.js";const x={ANIMATING:0,INTERACTING:1};class b extends I{constructor(t){super(t),this.pixelTransform=f(),this.inversePixelTransform=f()}useContainer(t,e,i){super.useContainer(null,e,i)}getBackground(t){return super.getBackground?super.getBackground(t):""}prepareFrame(t){var r,o;const e=t.layerStatesArray[t.layerIndex],i=t.viewState,s=t.viewHints;let n=t.extent;return e.extent!==void 0&&(n=v(n,l(e.extent,i.projection))),!s[x.ANIMATING]&&!t.animate&&!s[x.INTERACTING]&&!R(n)?((o=(r=this.wind)==null?void 0:r.isStop)!=null&&o.call(r)&&this.wind.start(),!0):this.getLayer().get("forceRender")}prepareContainer(t,e){const i=t.size,s=t.viewState.rotation,n=t.pixelRatio,r=Math.round(i[0]*n),o=Math.round(i[1]*n);E(this.pixelTransform,t.size[0]/2,t.size[1]/2,1/n,1/n,s,-r/2,-o/2),A(this.inversePixelTransform,this.pixelTransform);const d=F(this.pixelTransform);if(this.useContainer(e,d,this.getBackground(t)),!this.containerReused){const a=this.context.canvas;(a.width!=r||a.height!=o)&&(a.width=r,a.height=o),d!==a.style.transform&&(a.style.transform=d)}}getRenderContext(t){return this.context}renderFrame(t,e){const i=t.layerStatesArray[t.layerIndex],s=t.viewState;this.prepareContainer(t,e);const n=this.getRenderContext(t);n.imageSmoothingEnabled=!1,this.preRender(n,t);let r=!1,o=!0;if(i.extent){const c=l(i.extent,s.projection);o=C(c,t.extent),r=o&&!y(c,t.extent),r&&this.clipUnrotated(n,t,c)}const d=this.getLayer(),a=d.getWindOptions(),m=d.getData();return this.execute(this.context,t,a,m),this.postRender(this.context,t),r&&n.restore(),n.imageSmoothingEnabled=!0,this.container}setOptions(t){this.wind&&this.wind.setOptions(t)}setData(t){this.wind&&this.wind.updateData(t)}execute(t,e,i,s){this.wind||(this.wind=new S(t,i,s),this.wind.project=this.getPixelFromCoordinateInternal.bind(this),this.wind.unproject=this.getCoordinateFromPixel.bind(this),this.wind.intersectsCoordinate=this.intersectsCoordinate.bind(this),this.wind.postrender=()=>{},this.wind.prerender())}getPixelFromCoordinateInternal(t){const e=this.frameState;if(e){const i=e.viewState,s=e.pixelRatio,n=p(t,"EPSG:4326",i.projection),r=u(n,i.projection),o=w(e.coordinateToPixelTransform,r.slice(0,2));return[o[0]*s,o[1]*s]}else return null}getCoordinateFromPixel(t){const e=this.frameState;if(e){const i=e.viewState,s=w(e.pixelToCoordinateTransform,t.slice(0,2)),n=O(s,i.projection),r=p(n,i.projection,"EPSG:4326");return[r[0],r[1]]}else return null}intersectsCoordinate(t){const e=this.frameState;if(e){const i=e.viewState,s=p(t,"EPSG:4326",i.projection),n=u(s,i.projection);return T(e.extent,n.slice(0,2))}return!0}}const k={forceRender:!0,windOptions:{}};class Q extends W{constructor(t,e){const i=h({},k,e);super(i),this.options=i,this.className_=e.className!==void 0?e.className:"wind-layer",this.pickWindOptions(),t&&this.setData(t,e.fieldOptions)}appendTo(t){t.addLayer(this)}onAdd(){var e;const t=this.getRenderer();t&&((e=t.wind)==null||e.start())}onRemove(){const t=this.getRenderer();t&&t.wind.stop()}createRenderer(){return new b(this)}getRenderer(){return super.getRenderer()}pickWindOptions(){Object.keys(j).forEach(t=>{t in this.options&&(this.options.windOptions===void 0&&(this.options.windOptions={}),this.options.windOptions[t]=this.options[t])})}getData(){return this.field}setData(t,e={}){t&&t.checkFields&&t.checkFields()?this.field=t:N(t)?this.field=P(t,e):console.error("Illegal data");const i=this.getRenderer();return i&&this.field&&i.setData(this.field),this.changed(),this}setWindOptions(t){const e=this.options.windOptions||{};this.options=h(this.options,{windOptions:h(e,t||{})});const i=this.getRenderer();if(i){const s=this.options.windOptions;i.setOptions(s)}this.changed()}getWindOptions(){return this.options.windOptions||{}}render(t,e){const i=this.getRenderer();return i&&i.prepareFrame(t)?(this.rendered=!0,i.renderFrame(t,e)):null}setMapInternal(t){super.setMapInternal(t),t?this.onAdd():this.onRemove()}setMap(t){super.setMap(t),t?this.onAdd():this.onRemove()}}export{K as Field,Q as WindLayer};
