import{a as h,W as m,d as v,i as g,f as w,w as p}from"./wind-core.esm.CHEVv6qw.js";import{F as j}from"./wind-core.esm.CHEVv6qw.js";const r=typeof window>"u"?global:window,u={context:"2d",paneName:"mapPane",opacity:1,zIndex:1,windOptions:{},fieldOptions:{}},a=r==null?void 0:r.BMap;if(!a)throw new Error("Before using this plugin, you must first introduce the BMap JS API <http://lbsyun.baidu.com/index.php?title=jspopular3.0>");class x extends a.Overlay{constructor(t,e={}){const i=h({},u,e);super(e),this.options=i,this.paneName=this.options.paneName,this.context=this.options.context,this.zIndex=this.options.zIndex,this.mixBlendMode=this.options.mixBlendMode||null,this.enableMassClear=this.options.enableMassClear,this.canvas=null,this.wind=null,this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.handleResize=this.handleResize.bind(this),this.pickWindOptions(),t&&this.setData(t,e.fieldOptions)}appendTo(t){if(t)t.addOverlay(this);else throw new Error("not map object")}initialize(t){this.map=t;const e=this.canvas=document.createElement("canvas");return e.style.cssText=`position:absolute; left:0; top:0; z-index: ${this.zIndex} ;user-select:none;`,e.style.mixBlendMode=this.mixBlendMode,this.adjustSize(),t.getPanes()[this.paneName].appendChild(e),this.bindEvent(),this.canvas}handleResize(){this.adjustSize(),this._draw()}bindEvent(){this.map.addEventListener("resize",this.handleResize),this.map.addEventListener("dragstart",this.stop),this.map.addEventListener("dragend",this.start),this.map.addEventListener("movestart",this.stop),this.map.addEventListener("moveend",this.start),this.map.addEventListener("zoomstart",this.stop),this.map.addEventListener("zoomend",this.start),this.map.addEventListener("touchstart",this.stop),this.map.addEventListener("touchend",this.start)}unbindEvent(){this.map.removeEventListener("resize",this.handleResize),this.map.removeEventListener("dragstart",this.stop),this.map.removeEventListener("dragend",this.start),this.map.removeEventListener("movestart",this.stop),this.map.removeEventListener("moveend",this.start),this.map.removeEventListener("zoomstart",this.stop),this.map.removeEventListener("zoomend",this.start),this.map.removeEventListener("touchstart",this.stop),this.map.removeEventListener("touchend",this.start)}start(){this.wind&&this.wind.start()}stop(){this.wind&&this.wind.stop()}adjustSize(){const t=this.map.getSize(),e=this.canvas,i=window.devicePixelRatio||1;e!==null&&(e.width=t.width*i,e.height=t.height*i,this.context==="2d"&&e.getContext(this.context).scale(i,i),e.style.width=t.width+"px",e.style.height=t.height+"px")}draw(){this._draw()}_draw(){const t=this.map,e=t.getSize(),i=t.getCenter();if(i&&this.canvas){const s=t.pointToOverlayPixel(i);this.canvas.style.left=s.x-e.width/2+"px",this.canvas.style.top=s.y-e.height/2+"px",this.dispatchEvent("draw"),this.options.update&&this.options.update.call(this),this.render(this.canvas)}}render(t){if(!this.getData()||!this.map)return this;const e=this.getWindOptions();if(t&&!this.wind){const i=this.getData(),s=this.getContext();s&&(this.wind=new m(s,e,i),this.wind.project=this.project.bind(this),this.wind.unproject=this.unproject.bind(this),this.wind.intersectsCoordinate=this.intersectsCoordinate.bind(this),this.wind.postrender=()=>{})}return this.wind&&(this.wind.prerender(),this.wind.render()),this}getContext(){if(this.canvas!==null)return this.canvas.getContext(this.context)}getContainer(){return this.canvas}getProjection(){const t=this.map,e=t.getMapType();let i;return e.getProjection?i=e.getProjection():i={lngLatToPoint:function(s){const n=t.lnglatToMercator(s.lng,s.lat);return{x:n[0],y:n[1]}}},i}transferToMercator(t){const e=this.getProjection();if(t[0]<-180||t[0]>180||t[1]<-90||t[1]>90)return t;{const i=e.lngLatToPoint({lng:t[0],lat:t[1]});return[i.x,i.y]}}projectInner(t){const e=this.map;let i=1;this.context!=="2d"&&(i=window.devicePixelRatio);const s=this.getProjection();let n;e.getMapType().getProjection?n=s.lngLatToPoint(e.getCenter()):n={x:e.getCenter().lng,y:e.getCenter().lat};let o;s.getZoomUnits?o=s.getZoomUnits(e.getZoom()):o=Math.pow(2,18-e.getZoom());const d=new a.Pixel(n.x-e.getSize().width/2*o,n.y+e.getSize().height/2*o),c=(t[0]-d.x)/o*i,l=(d.y-t[1])/o*i;return[c,l]}project(t){const e=this.transferToMercator(t);return this.projectInner(e)}unproject(t){const e=this.map.pixelToPoint(new a.Pixel(t[0],t[1]));return[e.lng,e.lat]}intersectsCoordinate(t){return this.map.getBounds().containsPoint(new a.Point(t[0],t[1]))}pickWindOptions(){Object.keys(v).forEach(t=>{t in this.options&&(this.options.windOptions===void 0&&(this.options.windOptions={}),this.options.windOptions[t]=this.options[t])})}getData(){return this.field}setData(t,e={}){var i;return t&&t.checkFields&&t.checkFields()?this.field=t:g(t)?this.field=w(t,e):console.error("Illegal data"),this.map&&this.canvas&&this.field&&((i=this==null?void 0:this.wind)==null||i.updateData(this.field),this.render(this.canvas)),this}updateParams(t={}){return p("will move to setWindOptions"),this.setWindOptions(t),this}getParams(){return p("will move to getWindOptions"),this.getWindOptions()}setWindOptions(t){const e=this.options.windOptions||{};this.options=h(this.options,{windOptions:h(e,t||{})}),this.wind&&(this.wind.setOptions(this.options.windOptions),this.wind.prerender())}getWindOptions(){return this.options.windOptions||{}}show(){this.canvas?this.canvas.style.display="block":this.map.addOverlay(this)}hide(){this.canvas&&(this.canvas.style.display="none")}setZIndex(t){this.zIndex=t,this.canvas&&(this.canvas.style.zIndex=String(this.zIndex))}getZIndex(){return this.zIndex}}const y=x;export{j as Field,y as WindLayer,x as default};
